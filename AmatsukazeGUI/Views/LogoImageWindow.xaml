<Window x:Class="Amatsukaze.Views.LogoImageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Amatsukaze.Views"
        xmlns:vm="clr-namespace:Amatsukaze.ViewModels"
        Title="ロゴ確認" SizeToContent="WidthAndHeight">

    <Window.DataContext>
        <vm:LogoImageViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>
        
        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>
        
    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Image x:Name="image" Margin="0,0,0,0" Source="{Binding Model.LogoImage}" Stretch="None"/>
        
        <Button x:Name="button" Content="採用" Grid.Column="1" HorizontalAlignment="Left" Margin="15,10,15,5" VerticalAlignment="Top" Width="90" Command="{Binding OkCommand}"/>
        <Button x:Name="button1" Content="キャンセル" Grid.Column="1" HorizontalAlignment="Left" Margin="15,40,15,0" VerticalAlignment="Top" Width="90" Command="{Binding CancelCommand}"/>
        
        <Label x:Name="label" Content="背景" HorizontalAlignment="Left" Margin="0,0.333,0,0" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Top"/>
        <Slider x:Name="slider" Margin="34,5,9.667,5" Grid.Row="1" Grid.ColumnSpan="2" Maximum="255" LargeChange="10" SmallChange="1" Value="{Binding Model.LogoBG, Mode=TwoWay}"/>
        <TextBlock x:Name="textBlock" Grid.Column="1" HorizontalAlignment="Left" Margin="4.667,70,0,0" TextWrapping="Wrap" VerticalAlignment="Top">
            <Run Text="サービスID:" /><Run Text="{Binding Model.Logo.ServiceId}" /><LineBreak></LineBreak><Run Text="{Binding Model.Logo.Name}" />
        </TextBlock>

    </Grid>
</Window>
