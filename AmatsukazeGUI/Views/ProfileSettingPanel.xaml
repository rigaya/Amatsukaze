<UserControl x:Class="Amatsukaze.Views.ProfileSettingPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:v="clr-namespace:Amatsukaze.Views" 
             xmlns:vm="clr-namespace:Amatsukaze.ViewModels" 
             xmlns:c="clr-namespace:Amatsukaze.Components" 
             xmlns:m="clr-namespace:Amatsukaze.Models" 
             mc:Ignorable="d" 
             d:DesignHeight="1500" d:DesignWidth="500"
             d:DataContext="{d:DesignInstance {x:Type vm:ProfileSettingViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary Source="CommonResources.xaml"/>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="FromProfile">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <DockPanel.Resources>
            <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />
        </DockPanel.Resources>

        <DockPanel DockPanel.Dock="Top">
            <TextBlock DockPanel.Dock="Left" Text="プロファイル" VerticalAlignment="Center" Margin="5"/>
            <Button DockPanel.Dock="Right" Content="削除" Margin="2" Height="30" ToolTip="現在のプロファイル削除します" Command="{Binding DeleteProfileCommand}"/>
            <Button DockPanel.Dock="Right" Margin="2" Height="30" Width="25" ToolTip="現在のプロファイルをリネームします" Command="{Binding RenameProfileCommand}">
                <TextBlock>リネ<LineBreak/>ーム</TextBlock>
            </Button>
            <Button DockPanel.Dock="Right" Content="新規" Margin="2" Height="30" ToolTip="現在のプロファイルをコピーして新しいプロファイルを作成します" Command="{Binding NewProfileCommand}"/>
            <Button DockPanel.Dock="Right" Content="適用" Margin="2" Height="30" Width="60" Command="{Binding ApplyProfileCommand}" />
            <ComboBox ItemsSource="{Binding Model.ProfileListView}" Margin="5" Height="22" SelectedItem="{Binding Model.SelectedProfile, Mode=TwoWay}"/>
        </DockPanel>

        <Separator DockPanel.Dock="Top"/>

        <TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0.333,74,0">
            <Run Text="{Binding Model.SelectedProfile.SettingWarningText}" Foreground="Red" /><Run Text=" "/><Run Text="「適用」で反映。「更新」を押すと編集中の設定が失われるので注意"/>
        </TextBlock>

        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.Resources>
                    <Style x:Key="ExtendDuration" TargetType="FrameworkElement">
                        <Setter Property="ToolTipService.ShowDuration" Value="30000" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="Slider" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="ComboBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="CheckBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" Text="エンコーダ"/>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,28" Height="32">エンコーダ<LineBreak/>追加オプション</TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="0">
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.SelectedProfile.ForceSAREnabled}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" Text="SAR比"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" Height="32">JoinLogoScp<LineBreak/>コマンドファイル</TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" Height="16" Text="オプション"/>
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" Text="chapter_exeオプション"/>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Margin="10,0">
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Content="プロファイル設定をテキストでコピー" Height="20"
                                Command="{Binding Model.SelectedProfile.CopySettingTextCommand}"/>
                        <ComboBox Margin="0,3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Height="22" 
                              ItemsSource="{Binding Model.SelectedProfile.EncoderList}"
                              SelectedIndex="{Binding Model.SelectedProfile.EncoderTypeInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>

                    <TextBox Margin="0,3" Height="85" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.EncoderOption, Mode=TwoWay}"
                             VerticalAlignment="Top"
                             ToolTip="入力ファイルの解像度、アスペクト比、インタレースフラグ、&#xA;フレームレート、カラーマトリクス等は（自動ビットレートONの場合はビットレート設定も）&#xA;自動で追加されるので不要です。"/>

                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="1" Margin="10,0">
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.SelectedProfile.ForceSAREnabled}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <DockPanel>
                            <CheckBox Content="SAR比を上書きする" DockPanel.Dock="Left" VerticalAlignment="Center"
                                  IsChecked="{Binding Model.SelectedProfile.ForceSAR, Mode=TwoWay}"/>
                            <TextBox Width="40" Height="23" HorizontalAlignment="Left" Margin="6,0"
                                Text="{Binding Model.SelectedProfile.ForceSARWidth, Mode=TwoWay, StringFormat=\{0:D\}, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="SAR比をmux時に指定します"/>
                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0" Height="16" Text=":"/>
                            <TextBox Width="40" Height="23" HorizontalAlignment="Left" 
                                Text="{Binding Model.SelectedProfile.ForceSARHeight, Mode=TwoWay, StringFormat=\{0:D\}, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="SAR比をmux時に指定します"/>
                        </DockPanel>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="2" Grid.Column="1" Margin="10,0">
                    <StackPanel.Resources>
                        <CollectionViewSource x:Key="NullList" Source="{x:Static m:NullValue.Array}"/>
                        <CollectionViewSource x:Key="JLSCommandList" Source="{Binding Model.JlsCommandFiles}"/>
                    </StackPanel.Resources>
                    <ComboBox Margin="0,3" Height="22" 
                      SelectedItem="{Binding Model.SelectedProfile.JLSCommandFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" 
                          ToolTip="CM判定に使います。">
                        <ComboBox.Resources>
                            <DataTemplate DataType="{x:Type m:NullValue}">
                                <TextBlock>チャンネル設定に従う</TextBlock>
                            </DataTemplate>
                        </ComboBox.Resources>
                        <ComboBox.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource NullList}}"/>
                                <CollectionContainer Collection="{Binding Source={StaticResource JLSCommandList}}"/>
                            </CompositeCollection>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="1" Margin="10,0">
                    <DockPanel>
                        <CheckBox Content="チャンネル設定に従う" DockPanel.Dock="Right" VerticalAlignment="Center"
                                  IsChecked="{Binding Model.SelectedProfile.EnableJLSOption, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}"/>
                        <TextBox ToolTip="JoinLogoScpのオプション"
                                 Text="{Binding Model.SelectedProfile.JLSOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding Model.SelectedProfile.EnableJLSOption, Mode=OneWay}"/>
                    </DockPanel>
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="1" Margin="10,0">
                    <TextBox Margin="0,3" ToolTip="chapter_exeのオプション"
                             Text="{Binding Model.SelectedProfile.ChapterExeOptions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </StackPanel>

                <StackPanel Grid.Row="5" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" TextWrapping="Wrap" Text="MPEG2デコーダ"/>
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" TextWrapping="Wrap" Text="H264デコーダ"/>
                </StackPanel>
                <StackPanel Grid.Row="7" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" TextWrapping="Wrap" Text="HEVCデコーダ"/>
                </StackPanel>
                <StackPanel Grid.Row="8" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" Text="出力フォーマット"/>
                </StackPanel>
                <StackPanel Grid.Row="9" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6" Height="16" Text="出力選択"/>
                </StackPanel>
                <StackPanel Grid.Row="5" Grid.Column="1" Margin="10,0">
                    <ComboBox HorizontalAlignment="Left" Margin="0,3" VerticalAlignment="Top" Width="120" Height="22"
                       ItemsSource="{Binding Model.SelectedProfile.Mpeg2DecoderList}"
                          SelectedIndex="{Binding Model.SelectedProfile.Mpeg2DecoderInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ToolTip>
                            <TextBlock>
                                デフォルト(CPU)が一番速いと思います。
                                <LineBreak/>CUVIDにするとCPU負荷が減るのでトータルでは速くなるかもしれません。
                                <LineBreak/>QSVは現バージョンのFFmpegが壊れてて使えません。
                                <LineBreak/>デフォルト以外にするとQP値が取得できないためデブロッキングフィルタが無効になります。
                            </TextBlock>
                        </ComboBox.ToolTip>
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="1" Margin="10,0">
                    <ComboBox HorizontalAlignment="Left" Margin="0,3" VerticalAlignment="Top" Width="120" Height="22"
                      ItemsSource="{Binding Model.SelectedProfile.H264DecoderList}"
                          SelectedIndex="{Binding Model.SelectedProfile.H264DecoderInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       ToolTip="CUVIDの方が速いです。&#xA;QSVは現バージョンのFFmpegが壊れてて使えません。"/>
                </StackPanel>
                <StackPanel Grid.Row="7" Grid.Column="1" Margin="10,0">
                    <ComboBox HorizontalAlignment="Left" Margin="0,3" VerticalAlignment="Top" Width="120" Height="22"
                      ItemsSource="{Binding Model.SelectedProfile.HEVCDecoderList}"
                          SelectedIndex="{Binding Model.SelectedProfile.HEVCDecoderInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       ToolTip="CUVIDの方が速いです。&#xA;QSVは現バージョンのFFmpegが壊れてて使えません。"/>
                </StackPanel>
                <StackPanel Grid.Row="8" Grid.Column="1" Margin="10,0">
                    <DockPanel>
                        <ComboBox Margin="0,3" Width="120" Height="22"
                           ItemsSource="{Binding Model.SelectedProfile.FormatList}" 
                           SelectedIndex="{Binding Model.SelectedProfile.OutputFormatInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           ToolTip="MP4の場合、ASS字幕は別ファイルとして出力されます"/>

                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Model.SelectedProfile.OutputFormatInt}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <CheckBox Content="字幕がある場合、MKV出力する" VerticalAlignment="Center" Margin="5,5" 
                                  IsChecked="{Binding Model.SelectedProfile.UseMKVWhenSubExists, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="字幕がある場合、字幕ファイルが別途できるのを避けるため、mkvで出力します。"/>
                        </StackPanel>

                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Model.SelectedProfile.TsreplaceSelected}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <CheckBox Content="データ放送を削除する" VerticalAlignment="Center" Margin="5,5" 
                                  IsChecked="{Binding Model.SelectedProfile.TsreplaceRemoveTypeD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="データ放送を削除し、出力tsの軽量化を図ります"/>
                        </StackPanel>

                    </DockPanel>
                </StackPanel>
                <StackPanel Grid.Row="9" Grid.Column="1" Margin="10,0">
                    <ComboBox HorizontalAlignment="Left" Margin="0,3" VerticalAlignment="Top" Width="130" Height="22"
                       ItemsSource="{Binding Model.SelectedProfile.OutputOptionList}" 
                       SelectedItem="{Binding Model.SelectedProfile.OutputMask, Mode=TwoWay}"
                       ToolTip="CMカットの精度は100%ではありません"
                       IsEnabled="{Binding Model.SelectedProfile.OutputOptionEnabled}"
                    />
                </StackPanel>

                <StackPanel Grid.Row="10" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Margin="0,3" Text="リネーム" />
                </StackPanel>
                <StackPanel Grid.Row="11" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Margin="0,15" Text="SCRename書式" />
                </StackPanel>
                <StackPanel Grid.Row="12" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Text="" Margin="0,3"/>
                </StackPanel>
                <StackPanel Grid.Row="13" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Text="実行前バッチ" Margin="0,6"/>
                </StackPanel>
                <StackPanel Grid.Row="14" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Text="エンコード前バッチ" Margin="0,6"/>
                </StackPanel>
                <StackPanel Grid.Row="15" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" VerticalAlignment="Center" Text="実行後バッチ" Margin="0,6"/>
                </StackPanel>
                <StackPanel Grid.Row="10" Grid.Column="1" Margin="10,0">
                    <CheckBox Height="16" Margin="0,3"  Content="SCRenameによるリネームを行う" 
                              IsChecked="{Binding Model.SelectedProfile.EnableRename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="SCRenameで適切なファイル名を取得してエンコード後、そのファイル名を設定します" />
                </StackPanel>
                <StackPanel Grid.Row="11" Grid.Column="1" Margin="10,0">
                    <TextBox Margin="0,3" Height="40" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.RenameFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             VerticalAlignment="Top"
                             ToolTip="空欄にするとデフォルト書式を設定します" />
                </StackPanel>
                <StackPanel Grid.Row="12" Grid.Column="1" Margin="10,0">
                    <CheckBox Height="16" Margin="0,3"  Content="ジャンルごとにフォルダ分け" 
                              IsChecked="{Binding Model.SelectedProfile.EnableGunreFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="SCRenameで名前が取得できた場合はフォルダ分けされません。" />
                </StackPanel>
                <StackPanel Grid.Row="13" Grid.Column="1" Margin="10,0">
                    <ComboBox Height="22" Margin="0,3" ToolTip="エンコード実行直前に実行するバッチファイル"
                              ItemsSource="{Binding Model.PreBatFiles}"
                              SelectedItem="{Binding Model.SelectedProfile.PreBatchFile, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Grid.Row="14" Grid.Column="1" Margin="10,0">
                    <ComboBox Height="22" Margin="0,3" ToolTip="エンコード開始直前に実行するバッチファイル"
                              ItemsSource="{Binding Model.PreEncodeBatFiles}"
                              SelectedItem="{Binding Model.SelectedProfile.PreEncodeBatchFile, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Grid.Row="15" Grid.Column="1" Margin="10,0">
                    <ComboBox Height="22" Margin="0,3" ToolTip="エンコード実行後に実行するバッチファイル"
                              ItemsSource="{Binding Model.PostBatFiles}"
                              SelectedItem="{Binding Model.SelectedProfile.PostBatchFile, Mode=TwoWay}" />
                </StackPanel>

                <TextBlock Grid.Row="16" HorizontalAlignment="Left" Text="フィルタ設定" VerticalAlignment="Center"/>
                <StackPanel Grid.Row="16" Grid.Column="1" Margin="10,4">
                    <ComboBox Margin="0,3" Height="22"
                              ItemsSource="{Binding Model.SelectedProfile.FilterOptions}"
                              SelectedIndex="{Binding Model.SelectedProfile.FilterOption, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ContentPresenter Content="{Binding Model.SelectedProfile.SelectedFilterOption}">
                        <ContentPresenter.Resources>
                            <DataTemplate DataType="{x:Type m:DisplayFilterSetting}">
                                <v:FilterSettingPanel />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type m:DisplayCustomFilter}">
                                <StackPanel>
                                    <DockPanel>
                                        <TextBlock Text="メインフィルタ" Margin="0,6"/>
                                        <ComboBox Margin="0,3" Height="23"
                                        ItemsSource="{Binding Model.MainScriptFiles}"
                                        Text="{Binding FilterPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"
                                            ToolTip="メインとなるフィルタを設定します。" />
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock Text="ポストフィルタ" Margin="0,6"/>
                                        <ComboBox Margin="0,3" Height="23"
                                        ItemsSource="{Binding Model.PostScriptFiles}"
                                        Text="{Binding PostFilterPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"
                                            ToolTip="メインフィルタの後に掛けるフィルタを設定します。" />
                                    </DockPanel>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type m:DisplayNoFilter}">
                                <DockPanel />
                            </DataTemplate>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </StackPanel>

                <TextBlock Grid.Row="17" HorizontalAlignment="Left" Text="ビットレート設定" VerticalAlignment="Top" Margin="0,76.667,0,0"/>
                <StackPanel Grid.Row="17" Grid.Column="1" Margin="10,4">
                    <CheckBox Margin="0,4" Content="2パスエンコード"
                          IsChecked="{Binding Model.SelectedProfile.TwoPass, Mode=TwoWay}" VerticalAlignment="Top"/>
                    <DockPanel Margin="0,4">
                        <TextBlock Text="CMビットレート倍率" VerticalAlignment="Center"/>
                        <Border Width="10"/>
                        <TextBox HorizontalAlignment="Left" Width="50" Height="23"
                             Text="{Binding Model.SelectedProfile.BitrateCM, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="CMのビットレートを下げたいときに1より小さい値（0.3など）を設定すると有効です。&#xA;VCEEncで通常出力の場合は対応していません。"/>
                        <Border Width="10"/>
                        <TextBlock Text="CM品質オフセット" VerticalAlignment="Center" Margin="4,0,0,0"/>
                        <Border Width="10"/>
                        <TextBox HorizontalAlignment="Left" Width="50" Height="23"
                             Text="{Binding Model.SelectedProfile.CMQualityOffset, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{Binding Model.SelectedProfile.CMQualityOffsetEnabled}"
                             ToolTip="CMのビットレートを下げたいときに正の値（8など）を設定すると有効です。&#xA;QSVEnc,NVEncで品質指定のモード使用時、&#xA;またx264/x265/SVT-AV1で本編とCMを分離を選択した場合の品質指定のモード使用時に使用できます。"/>
                    </DockPanel>
                    <DockPanel>
                        <CheckBox x:Name="autoBitrateCheck" DockPanel.Dock="Top" Content="自動ビットレート指定"
                          IsChecked="{Binding Model.SelectedProfile.AutoBuffer, Mode=TwoWay}" Height="19" VerticalAlignment="Top">
                            <CheckBox.ToolTip>
                                <TextBlock>入力ファイルの映像ビットレートからビットレートを計算します。
                            <LineBreak/>映像ビットレートkbps = h264*(a*s+b)
                            <LineBreak/>sは入力映像ビットレート、a,b,h264は設定された値、ただしh264はソースがMPEG2の場合は1
                            <LineBreak/>同時に最大ビットレートが、計算されたビットレートの2倍に設定されます。
                                </TextBlock>
                            </CheckBox.ToolTip>
                        </CheckBox>
                        <TextBlock Text="a" VerticalAlignment="Center" Margin="4,0,0,0"/>
                        <TextBox Width="50" Height="22" Margin="4,0"
                                 IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}"
                                 Text="{Binding Model.SelectedProfile.BitrateA, Mode=TwoWay, StringFormat=\{0:F\}}" />
                        <TextBlock Text="b" VerticalAlignment="Center" Margin="4,0,0,0"/>
                        <TextBox Width="50" Height="22" Margin="4,0"
                                 IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}"
                                 Text="{Binding Model.SelectedProfile.BitrateB, Mode=TwoWay, StringFormat=\{0:F\}}" />
                        <TextBlock Text="h264" VerticalAlignment="Center" Margin="4,0,0,0"/>
                        <TextBox Width="50" Height="22" Margin="4,0"
                                 IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}"
                                 Text="{Binding Model.SelectedProfile.BitrateH264, Mode=TwoWay, StringFormat=\{0:F\}}" />
                        <Border/>
                    </DockPanel>
                    <Grid Width="240" HorizontalAlignment="Left" Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="ビットレートサンプル" HorizontalAlignment="Center" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="入力映像" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="MPEG2の場合" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="H264の場合" HorizontalAlignment="Center" />

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="18Mbps" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="12Mbps" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="7Mbps" HorizontalAlignment="Center" />

                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate18MPEG2}" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate12MPEG2}" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate7MPEG2}" HorizontalAlignment="Center" />

                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate18H264}" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate12H264}" HorizontalAlignment="Center" />
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate7H264}" HorizontalAlignment="Center" />
                    </Grid>
                </StackPanel>

                <TextBlock Grid.Row="18" HorizontalAlignment="Right" Text="音声エンコード" VerticalAlignment="Top" Margin="0,4"/>
                <StackPanel Grid.Row="18" Margin="0,24,0,0">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.SelectedProfile.EnableAudioEncode}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Grid.Row="18" Height="16" HorizontalAlignment="Right" Margin="0,4" 
                               Text="音声エンコーダ" VerticalAlignment="Top"/>
                    <TextBlock Grid.Row="18" Height="16" HorizontalAlignment="Right" Margin="0,4" 
                               Text="音声ビットレート" VerticalAlignment="Top"/>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,8" Height="32">音声エンコーダ<LineBreak/>追加オプション</TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="18" Grid.Column="1" Margin="10,0">
                    <CheckBox Content="音声をエンコードする" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0,4"
                                  IsChecked="{Binding Model.SelectedProfile.EnableAudioEncode, Mode=TwoWay}"/>
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.SelectedProfile.EnableAudioEncode}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <ComboBox Margin="0,3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Height="22" 
                              ItemsSource="{Binding Model.SelectedProfile.AudioEncoderList}"
                              SelectedIndex="{Binding Model.SelectedProfile.AudioEncoderTypeInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBox Width="50" Height="22" Margin="4,0"
                                 IsEnabled="{Binding Model.SelectedProfile.EnableAudioBitrate}"
                                 Text="{Binding Model.SelectedProfile.AudioBitrateInKbps, Mode=TwoWay, StringFormat=\{0:D\}}" />
                            <TextBlock Text="kbps" VerticalAlignment="Center"/>
                            <CheckBox x:Name="audioBitrateCheck" Content="ビットレートを指定しない" 
                                      DockPanel.Dock="Right" VerticalAlignment="Center" Margin="8,0"
                                      IsChecked="{Binding Model.SelectedProfile.EnableAudioBitrate, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}"/>
                        </StackPanel>
                        <TextBox Margin="0,3" Height="40" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.AudioEncoderOption, Mode=TwoWay}"
                             VerticalAlignment="Top"/>
                    </StackPanel>
                </StackPanel>

                <TextBlock Grid.Row="19" HorizontalAlignment="Left" Text="ニコニコ実況コメント" VerticalAlignment="Top" Margin="0,45.667,0,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.Setting.IsServerLinux}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <StackPanel Grid.Row="19" Grid.Column="1" Margin="10,0">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.Setting.IsServerLinux}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="nicoJKCheck" Grid.Row="0" Content="ニコニコ実況コメントを有効にする" Margin="0,3"
                                  IsChecked="{Binding Model.SelectedProfile.EnableNicoJK, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="ニコニコ実況コメントをASS字幕で追加します"/>
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" Content="エラーを無視" Margin="6,3"
                                  IsChecked="{Binding Model.SelectedProfile.IgnoreNicoJKError, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}"/>
                    </Grid>
                    <CheckBox Grid.Row="1" Content="NicoJKログから優先的にコメントを取得する" Margin="0,3"
                                  IsChecked="{Binding Model.SelectedProfile.NicoJKLog, Mode=TwoWay}"
                                  IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}">
                        <CheckBox.ToolTip>
                            <TextBlock>NicoJKログからのコメント取得は完全にNicoConvAss依存です。
                            <LineBreak/>NicoConvAss.iniのNicoJK_pathを設定しておいてください。
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Grid.Row="1" Content="NicoJK18サーバからコメントを取得する（推奨）" Margin="0,3"
                                  IsChecked="{Binding Model.SelectedProfile.NicoJK18, Mode=TwoWay}"
                                  IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}">
                        <CheckBox.ToolTip>
                            <TextBlock>セットアップ不要で取得できるサーバです。
                            <LineBreak/>これを使わない場合、JKCommentGetterのセットアップが必要になります（結構大変）。
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <Grid Width="240" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="コメント字幕出力フォーマット" HorizontalAlignment="Center" ToolTip="複数選択すると複数出力します" />
                        <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="1280x720サイズ" Margin="3,3"/>
                        <TextBlock Grid.Row="2" HorizontalAlignment="Center" Text="1920x1080サイズ" Margin="3,3"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="通常" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat720S, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="1" Grid.Column="2" Content="半透明" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat720T, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" Content="通常" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat1080S, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="2" Grid.Column="2" Content="半透明" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat1080T, Mode=TwoWay}"/>
                    </Grid>
                </StackPanel>

                <StackPanel Grid.Row="20" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Left" Height="16" Margin="0,80" Text="その他の設定"/>
                </StackPanel>
                <StackPanel Grid.Row="20" Grid.Column="1" Margin="10,0">
                    <CheckBox Height="16" Margin="0,3"  Content="関連ファイル(*.err,*.program.txtなど)もコピー/移動する" 
                              IsChecked="{Binding Model.SelectedProfile.MoveEDCBFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="これらのファイルも一緒にコピー・移動されるようになります。" />
                    <CheckBox Height="16" Margin="0,3"  Content="チャプター・CM解析を無効にする" 
                              IsChecked="{Binding Model.SelectedProfile.DisableChapter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="チャプターを別ファイルに出力する" 
                              IsChecked="{Binding Model.SelectedProfile.OutputChapter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsEnabled="{Binding Model.SelectedProfile.DisableChapter, Converter={StaticResource InverseBooleanConverter}}"
                              ToolTip="チャプターファイルを別ファイルとして出力します。「チャプター・CM解析を無効にする」がオンの場合は無効になります。" />
                    <CheckBox Height="16" Margin="0,3"  Content="字幕を無効にする"
                              IsChecked="{Binding Model.SelectedProfile.DisableSubs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="マッピングにないDRCS外字は無視する"
                              IsChecked="{Binding Model.SelectedProfile.IgnoreNoDrcsMap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ検出判定しきい値を低くする" 
                              IsChecked="{Binding Model.SelectedProfile.LooseLogoDetection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="ロゴ区間が短いなどでロゴ無し判定を食らう場合などに有効にすると解決するかもです"/>
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ検出に失敗しても処理を続行する" 
                              IsChecked="{Binding Model.SelectedProfile.IgnoreNoLogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ消ししない" 
                              IsChecked="{Binding Model.SelectedProfile.NoDelogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="並列ロゴ解析" 
                              IsChecked="{Binding Model.SelectedProfile.ParallelLogoAnalysis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="ロゴ解析を並列で行い高速化します。並列数は自動的に決定されます(最大4並列)。"/>
                    <CheckBox Height="16" Margin="0,3"  Content="システムにインストールされているAviSynthプラグインを有効にする" 
                              IsChecked="{Binding Model.SelectedProfile.SystemAviSynthPlugin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="ログファイルを出力先に生成しない"
                              IsChecked="{Binding Model.SelectedProfile.DisableLogFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="一時ファイルを削除せずに残す"
                              IsChecked="{Binding Model.SelectedProfile.NoRemoveTmp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Margin="0,3"
                              IsChecked="{Binding Model.SelectedProfile.EnablePmtCut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <WrapPanel Orientation="Horizontal">
                            <TextBlock Text="最初から"/>
                            <TextBox Width="30" IsEnabled="{Binding Model.SelectedProfile.EnablePmtCut, Mode=OneWay}"
                                     Text="{Binding Model.SelectedProfile.PmtCutHeadRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Text="%と最後から"/>
                            <TextBox Width="30" IsEnabled="{Binding Model.SelectedProfile.EnablePmtCut, Mode=OneWay}"
                                     Text="{Binding Model.SelectedProfile.PmtCutTailRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Text="%に"/>
                            <TextBlock Text="PMT更新がある場合はCMとする"/>
                        </WrapPanel>
                    </CheckBox>
                    <CheckBox Margin="0,3"
                              IsChecked="{Binding Model.SelectedProfile.EnableMaxFadeLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <CheckBox.ToolTip>
                            <TextBlock>デフォルトは16フレームです。
                            <LineBreak/>ゆっくりフェードするようなロゴは16フレームを超えるので、
                            <LineBreak/>フェード部分が消えない場合はここを設定してください。
                            <LineBreak/>2秒なら60、3秒なら90です。
                            </TextBlock>
                        </CheckBox.ToolTip>
                        <WrapPanel Orientation="Horizontal">
                            <TextBlock Text="ロゴ最長フェードフレーム数:"/>
                            <TextBox Width="40" IsEnabled="{Binding Model.SelectedProfile.EnableMaxFadeLength, Mode=OneWay}"
                                     Text="{Binding Model.SelectedProfile.MaxFadeLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                    </CheckBox>
                </StackPanel>

                <StackPanel Grid.Row="21" Grid.Column="0" Margin="0,20,0,0"
                            Visibility="{Binding IsExpanded, ElementName=detailSettingPanel, Converter={StaticResource BoolVisibilityConverter}}">
                    <TextBlock Height="16" Margin="0,4" />
                    <TextBlock Height="16" Margin="0,4" />
                    <TextBlock Height="32" Margin="0,4" HorizontalAlignment="Right" TextAlignment="Right">
                        追加ロゴ消し用<LineBreak/>ロゴリスト
                    </TextBlock>
                </StackPanel>
                <Expander Grid.Row="21" Grid.Column="1" x:Name="detailSettingPanel" Header="詳細設定">
                    <StackPanel>
                        <CheckBox Height="16" Margin="0,3"  Content="メイン以外のフォーマットは結合しない"
                            IsChecked="{Binding Model.SelectedProfile.SplitSub, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Height="16" Margin="0,3"  Content="ネットワーク越しに転送する場合のハッシュチェックを無効にする"
                              IsChecked="{Binding Model.SelectedProfile.DisableHashCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Margin="0,3" Height="40" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.AdditionalEraseLogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="CM解析用のメインのロゴとは別に、ロゴ消し用のロゴを追加できます。"
                             VerticalAlignment="Top" PreviewDragOver="TextBox_PreviewDragOver" Drop="TextBox_Drop"/>
                        <DockPanel ToolTip="フィルタからエンコーダに渡すときのバッファリングフレーム数です">
                            <DockPanel.Resources>
                                <l:VisibilityAndBooleanConverter x:Key="VisibilityAndBooleanConverter"
                                                        ConvertWhenTrue="Visible" ConvertWhenFalse="Hidden"/>
                            </DockPanel.Resources>
                            <TextBlock HorizontalAlignment="Left" Height="16" VerticalAlignment="Center" Margin="0,4" Text="バッファリングフレーム数"/>
                            <TextBlock DockPanel.Dock="Right" Width="30"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Text="{Binding Model.SelectedProfile.NumEncodeBufferFrames}"/>
                            <Slider Margin="3,2" Height="18"
                            SmallChange="1" Maximum="54" Minimum="1"
                            Value="{Binding Model.SelectedProfile.NumEncodeBufferFramesIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            LargeChange="4" TickFrequency="1"/>
                        </DockPanel>
                    </StackPanel>
                </Expander>

                <StackPanel Grid.Row="22" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Left" Margin="0,40">
                        スケジューリング<LineBreak/>リソース設定
                    </TextBlock>
                </StackPanel>

                <StackPanel Grid.Row="22" Grid.Column="1" Margin="0,5,0,0">
                    <StackPanel.Resources>
                        <l:VisibilityAndBooleanConverter x:Key="VisibilityAndBooleanConverter"
                                                         ConvertWhenTrue="Visible" ConvertWhenFalse="Collapsed"/>
                    </StackPanel.Resources>
                    <DockPanel>
                        <Border Width="90"/>
                        <TextBlock Width="50" Text="CPU" TextAlignment="Center"/>
                        <TextBlock Width="50" Text="HDD" TextAlignment="Center"/>
                        <TextBlock Width="50" Text="GPU" TextAlignment="Center"/>
                        <Border/>
                    </DockPanel>
                    <DockPanel>
                        <ItemsControl DockPanel.Dock="Left" ItemsSource="{Binding Model.SelectedProfile.Resources}">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type m:DisplayResource}">
                                    <DockPanel>
                                        <TextBlock Width="90" VerticalAlignment="Center" Text="{Binding Name, Mode=OneWay}" TextAlignment="Right" Margin="0,0,5,0"/>
                                        <TextBox Width="50" Text="{Binding CPU, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Width="50" Text="{Binding HDD, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Width="50" Text="{Binding GPU, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Border/>
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <StackPanel Width="80" HorizontalAlignment="Left">
                            <Button Content="コピー" Margin="5" Height="20" Command="{Binding Model.SelectedProfile.CopyResourceCommand}"/>
                            <Button Content="貼り付け" Margin="5" Height="20" Command="{Binding Model.SelectedProfile.PasteResourceCommand}"/>
                            <Button Content="使い方" Margin="5" Height="20" Command="{Binding ToggleResourceDescriptionCommand}"/>
                        </StackPanel>
                    </DockPanel>
                    <CheckBox DockPanel.Dock="Top" Content="CPUアフィニティを無視する" 
                              IsChecked="{Binding Model.SelectedProfile.IgnoreEncodeAffinity, Mode=TwoWay}"/>
                    <RichTextBox IsReadOnly="True" Margin="0,5" DockPanel.Dock="Bottom"
                                 BorderThickness="0" Background="Transparent"
                                 Visibility="{Binding ResourceDescriptionVisible, Converter={StaticResource VisibilityAndBooleanConverter}}">
                        <FlowDocument>
                            <Paragraph TextAlignment="Center">
                                <Bold>リソース設定の説明</Bold>
                            </Paragraph>
                            <Paragraph>
                                リソースはエンコード並列実行時のスケジューリングに用いられます。
                                「基本設定」でリソーススケジューリングをONにした場合のみ有効です。
                                エンコードの各フェーズごとに使用するCPUリソース、HDDリソース、GPUリソースを%で指定します。
                                これはスケジューリングに用いられるだけであって、他の何かに影響するわけではありません。
                                システム内で何かを専有するわけでも、確保するわけでもありません。
                            </Paragraph>
                            <Paragraph>
                                以下のような仕組みで動作します。
                            </Paragraph>
                            <Paragraph>
                                エンコードインスタンスが各フェーズに入るときに、プロファイルに設定されたリソースの確保を試みます。
                                このとき、並列実行している他のインスタンスと合わせて、CPU,HDD,GPUの各リソースが上限の100を超えなけば、
                                すぐ実行されますが、100を超える場合、リソースが確保できるようになるまでエンコードが中断されます。
                            </Paragraph>
                            <Paragraph>
                                例えば、TS解析のHDDリソースを100と設定した場合、
                                そのプロファイルのエンコードのTS解析は同時に１つしか走らなくなります。
                                TS解析以外のフェーズのHDDリソースを0に設定すれば、他のフェーズはTS解析と同時に実行可能です。
                                TS解析のHDDリソースを50と設定すれば、同時に2つまで同時実行可能になります。
                                同じように30と設定すれば3つまで同時実行可能になります。
                            </Paragraph>
                            <Paragraph>
                                リソースはCPU,HDD,GPUで別にカウントしているので、CPUを30%、HDDを100%、GPUを50%使うというような設定も可能です。
                            </Paragraph>
                            <Paragraph>
                                また、上では単純化して説明しましたが、GPUだけはマルチGPUに対応しているので少し挙動が違います。
                                CPUとHDDは上限100のリソースが１つずつしかありませんが、GPUの数と各GPUのリソース上限は
                                「基本設定」で設定可能です。異なるGPUはリソースが別にカウントされます。
                            </Paragraph>
                            <Paragraph>
                                <Bold>Tips:</Bold> 「基本設定」で設定されるエンコード並列数は、
                                リソース制限により中断されているエンコードインスタンスもカウントされます。
                                リソース設定で並列実行数を制御する場合は、エンコード並列数は多めに設定してください。
                            </Paragraph>
                            <Paragraph>
                                リソーススケジューリングが有効な場合、実行開始順は以下のようになります。
                            </Paragraph>
                            <List MarkerStyle="Box" Padding="15,0,0,0">
                                <ListItem>
                                    <Paragraph>
                                        優先度5は最初に実行される。ただし、同じ優先度5のアイテムはリソース空き順で実行される
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        優先度2～4はリソース空き順で実行される。ただし、使用リソースが同じなら優先度順で実行される
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        優先度1は最後に実行される。ただし、同じ優先度1のアイテムはリソース空き順で実行される
                                    </Paragraph>
                                </ListItem>
                            </List>
                            <Paragraph>
                                通常CPUアフィニティはコンソール番号に対してラウンドロビンで割り当てが行われますが、
                                リソーススケジューリングが有効な場合は、これは適用されず、エンコードフェーズでのみ
                                CPUアフィニティがプロセスに適用されます。GPUでエンコードする等、エンコードフェーズで
                                CPUアフィニティを適用したくない場合（CPUコアを割り当てたくない場合）は、
                                「CPUアフィニティを無視する」をチェックしてください。
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </StackPanel>

            </Grid>
        </ScrollViewer>
    </DockPanel>
</UserControl>
